
package servicesClient;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CircleWebService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CircleWebService {


    /**
     * 
     * @param radius
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calCircumference", targetNamespace = "http://services/", className = "servicesClient.CalCircumference")
    @ResponseWrapper(localName = "calCircumferenceResponse", targetNamespace = "http://services/", className = "servicesClient.CalCircumferenceResponse")
    @Action(input = "http://services/CircleWebService/calCircumferenceRequest", output = "http://services/CircleWebService/calCircumferenceResponse")
    public double calCircumference(
        @WebParam(name = "radius", targetNamespace = "")
        double radius);

    /**
     * 
     * @param radius
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calArea", targetNamespace = "http://services/", className = "servicesClient.CalArea")
    @ResponseWrapper(localName = "calAreaResponse", targetNamespace = "http://services/", className = "servicesClient.CalAreaResponse")
    @Action(input = "http://services/CircleWebService/calAreaRequest", output = "http://services/CircleWebService/calAreaResponse")
    public double calArea(
        @WebParam(name = "radius", targetNamespace = "")
        double radius);

}
